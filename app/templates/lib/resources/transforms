{
    "apiVersion": "2.0.0-SNAPSHOT-r1dc40",
    "authorizations": ["oauth2"],
    "apis": [
        {
            "description": "Get a list of all available transforms",
            "operations": [
                {
                    "method": "GET",
                    "nickname": "list",
                    "notes": "",
                    "parameters": [],
                    "summary": "Find all transforms for use within the api.",
                    "type": "MultipleTransformResponse"
                }
            ],
            "path": "/transforms/v2/"
        },
        {
            "description": "Get information about a specific transform.",
            "operations": [
                {
                    "method": "GET",
                    "nickname": "get",
                    "notes": "This will perform a partial match on the name value returning everything with the given string in the name.",
                    "parameters": [
                        {
                            "allowMultiple": false,
                            "description": "The name of the transform requested.",
                            "name": "transformId",
                            "paramType": "path",
                            "required": true,
                            "type": "string"
                        }
                    ],
                    "summary": "Find all transforms matching the given name.",
                    "type": "MultipleTransformResponse"
                }
            ],
            "path": "/transforms/v2/{transformId}"
        },
        {
            "description": "Query for transforms available for a specific file",
            "operations": [
                {
                    "method": "POST",
                    "nickname": "transformAndStage",
                    "notes": "This allows you to fire and forget a data transform and staging task.",
                    "parameters": [
                        {
                            "allowMultiple": false,
                            "description": "The name of the transform to apply to the given file.",
                            "name": "transformId",
                            "paramType": "path",
                            "required": true,
                            "type": "string"
                        },
                        {
                            "allowMultiple": false,
                            "description": "The name of the api user owning the file at the given path.",
                            "name": "owner",
                            "paramType": "path",
                            "required": true,
                            "type": "string"
                        },
                        {
                            "allowMultiple": false,
                            "description": "The path to the file to be transformed and staged",
                            "name": "filePath",
                            "paramType": "path",
                            "required": true,
                            "type": "string"
                        },
                        {
                            "allowMultiple": false,
                            "description": "The transfer request details.",
                            "name": "body",
                            "paramType": "body",
                            "required": true,
                            "type": "TransformRequest",
                            "defaultValue": "{\n\t\"url\": \"agave://demo.storage.example.com/apps/wc-1.00/picksumipsum.txt\",\n\t\"callbackUrl\": \"psherman@wallabydentistry.com.au\",\n\t\"nativeFormat\": \"raw\"\n}"
                        }
                    ],
                    "summary": "Transform a file and stage it to a specified location.",
                    "type": "MultipleTransformResponse"
                }
            ],
            "path": "/transforms/v2/{transformId}/async/{owner}/{filePath}"
        },
        {
            "description": "Transform and download files.",
            "operations": [
                {
                    "method": "POST",
                    "nickname": "transformAndDownload",
                    "notes": "This allows you to synchronously transform and download a file. The download blocks until the transform has completed, so use caution when choosing this service as it is likely to time out for larger files.",
                    "produces": [
      			        	"application/octet-stream"
      			        ],
      			        "parameters": [
                        {
                            "allowMultiple": false,
                            "description": "The name of the transform to apply to the given file.",
                            "name": "transformId",
                            "paramType": "path",
                            "required": true,
                            "type": "string"
                        },
                        {
                            "allowMultiple": false,
                            "description": "The name of the api user owning the file at the given path.",
                            "name": "owner",
                            "paramType": "path",
                            "required": true,
                            "type": "string"
                        },
                        {
                            "allowMultiple": false,
                            "description": "The path to the file to be transformed and downloaded.",
                            "name": "filePath",
                            "paramType": "path",
                            "required": true,
                            "type": "string"
                        },
                        {
                            "allowMultiple": false,
                            "description": "The transfer request details.",
                            "name": "body",
                            "paramType": "body",
                            "required": true,
                            "type": "TransformRequest",
                            "defaultValue": "{\n\t\"url\": \"agave://demo.storage.example.com/apps/wc-1.00/picksumipsum.txt\",\n\t\"callbackUrl\": \"psherman@wallabydentistry.com.au\",\n\t\"nativeFormat\": \"raw\"\n}"
                        }

                    ],
                    "summary": "Transform a file and download it directly.",
                    "type": "void"
                }
            ],
            "path": "/transforms/v2/{transformId}/sync/{owner}/{filePath}"
        },
        {
            "description": "Operations on a specific user.",
            "operations": [
                {
                    "method": "GET",
                    "nickname": "listByTag",
                    "notes": "This will perform a partial match on the tag value returning everything with the given string in the tag.",
                    "parameters": [
                        {
                            "allowMultiple": false,
                            "description": "The tag to search for transforms on.",
                            "name": "tag",
                            "paramType": "path",
                            "required": true,
                            "type": "string"
                        }
                    ],
                    "summary": "Find all transforms with the given tag.",
                    "type": "MultipleTransformResponse"
                }
            ],
            "path": "/transforms/v2/tags/{tag}"
        }
    ],
    "basePath": "https://api.araport.org",
    "models": {
        "Decoder": {
            "id": "Decoder",
            "name": "",
            "properties": {
                "description": {
                    "description": "The description of what this decoder is and what it does.",
                    "type": "string"
                },
                "name": {
                    "description": "The decoder name.",
                    "type": "string"
                }
            }
        },
        "Encoder": {
            "id": "Encoder",
            "name": "",
            "properties": {
                "description": {
                    "description": "The description of what this encoder is and what it does.",
                    "type": "string"
                },
                "name": {
                    "description": "The encoder name.",
                    "type": "string"
                }
            }
        },
        "MultipleTransformResponse": {
            "id": "MultipleTransformResponse",
            "name": "",
            "properties": {
                "message": {
                    "description": "success or failure",
                    "type": "string"
                },
                "result": {
                    "description": "response body",
                    "items": {
                        "$ref": "Transform"
                    },
                    "type": "array"
                },
                "status": {
                    "description": "success or failure",
                    "type": "string"
                }
            }
        },
        "SingleTransformResponse": {
            "id": "SingleTransformResponse",
            "name": "",
            "properties": {
                "message": {
                    "description": "success or failure",
                    "type": "string"
                },
                "result": {
                    "type": "Transform"
                },
                "status": {
                    "description": "success or failure",
                    "type": "string"
                }
            }
        },
        "Transform": {
            "id": "Transform",
            "name": "",
            "properties": {
                "decoders": {
                    "description": "The available decoders for this transform.",
                    "items": {
                        "$ref": "Decoder"
                    },
                    "type": "array"
                },
                "description": {
                    "description": "Description of this transform.",
                    "type": "string"
                },
                "descriptionurl": {
                    "description": "The URL to find out more information.",
                    "type": "string"
                },
                "enabled": {
                    "description": "Whether this transform is enabled or not.",
                    "type": "boolean"
                },
                "encoder": {
                    "description": "The encoder to use to convert to this format.",
                    "type": "Encoder"
                },
                "name": {
                    "description": "The name of this transform.",
                    "type": "string"
                },
                "tags": {
                    "description": "The tags describing this transform.",
                    "items": {
                        "type": "string"
                    },
                    "type": "array"
                }
            }
        },
        "TransformRequest": {
            "id": "TransformRequest",
            "name": "",
            "properties": {
                "nativeFormat": {
                    "description": "The original file type of the file. If not given, the file type is assumed to be raw.",
                    "type": "string"
                },
                "url": {
                    "description": "The uri to which the transformed file will be staged.",
                    "type": "string",
                    "required": true
                },
                "callbackUrl": {
                    "description": "The URI to notify when the transfer is complete. This can be an email address or http URL. If a URL is given, a GET will be made to this address. URL templating is supported. Valid template values are: ${NAME}, ${SOURCE_FORMAT}, ${DEST_FORMAT}, ${STATUS}",
                    "type": "string"
                }
            }
        }
    },
    "resourcePath": "/transforms/v2",
    "swaggerVersion": "1.2"
}
