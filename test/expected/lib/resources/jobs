{
    "apiVersion": "2.0.0-SNAPSHOT-r1dc40",
    "authorizations": ["oauth2"],
    "apis": [
        {
            "description": "Submit a new job request.",
            "operations": [
                {
                    "method": "GET",
                    "nickname": "list",
                    "notes": "All jobs both private and shared that are associated with a user.",
                    "parameters": [],
                    "summary": "Get a list of jobs the authenticated user had submitted.",
                    "type": "MultipleJobResponse"
                },
                {
                    "method": "POST",
                    "nickname": "submit",
                    "notes": "This is the sole point of submission for new jobs. Users must have permissions both on the app, execution host, and storage host to submit a job. Job requests are processed immediatly, however the actualy submission and execution happen asynchronously, so users are highly encouraged to leverage the callbackUrl parameter to receive notification of updates rather than polling.",
                    "parameters": [
                        {
                            "allowMultiple": false,
                            "description": "The description of the job to submit. This can be either a file upload or json posted to the request body.",
                            "name": "body",
                            "paramType": "body",
                            "required": true,
                            "type": "JobRequest",
                            "defaultValue": "{\n\t\"name\":\"wc-demo\",\n\t\"appId\":\"wc-demo-1.00\",\n\t\"memoryPerNode\":1,\n\t\"notifications\":[\n\t\t{\n\t\t\t\"url\":\"nryan@mlb.com\",\n\t\t\t\"event\":\"FINISHED\"\n\t\t}\n\t],\n\t\"inputs\":{\n\t\t\"query1\":\"agave://demo.storage.example.com/apps/wc-1.00/picksumipsum.txt\"\n\t}\n}"
                        }
                    ],
                    "summary": "Submit a new job request.",
                    "type": "SingleJobResponse"
                }
            ],
            "path": "/jobs/v2/"
        },
        {
            "description": "Get specific job details",
            "operations": [
                {
                    "method": "GET",
                    "nickname": "get",
                    "notes": "",
                    "parameters": [
                        {
                            "allowMultiple": false,
                            "description": "The id of the job.",
                            "format": "int32",
                            "name": "jobId",
                            "paramType": "path",
                            "required": true,
                            "type": "integer"
                        }
                    ],
                    "summary": "Get details of the job with the specific job id.",
                    "type": "SingleJobResponse"
                },
                {
                    "method": "POST",
                    "nickname": "manage",
                    "notes": "Using this method, users can stop a job that is currently running or resumbit the job for re-execution. If resubmitted, a new job will be created with the exact same inputs.",
                    "parameters": [
                        {
                            "allowMultiple": false,
                            "description": "The id of the job.",
                            "name": "jobId",
                            "paramType": "path",
                            "required": true,
                            "type": "string"
                        },
                        {
                            "allowMultiple": false,
                            "description": "The operation to perform.",
                            "name": "body",
                            "paramType": "body",
                            "required": true,
                            "type": "JobOperationRequest",
                            "defaultValue": "{\n\t\"action\":\"stop\"\n}"
                        }
                    ],
                    "summary": "Perform an action on a job.",
                    "type": "SingleJobResponse"
                },
                {
                    "method": "DELETE",
                    "nickname": "delete",
                    "notes": "The job will be removed from the user's job history and will no longer show up in listing requests. Any archived data associated with this job will be unaffected. Once deleted, there is no way to recover the deleted job.",
                    "parameters": [
                        {
                            "allowMultiple": false,
                            "description": "The id of the job.",
                            "name": "jobId",
                            "paramType": "path",
                            "required": true,
                            "type": "string"
                        }
                    ],
                    "summary": "Deletes a job from the user's history.",
                    "type": "EmptyJobResponse"
                }
            ],
            "path": "/jobs/v2/{jobId}"
        },
        {
            "description": "Get detailed job history containing every event in its history.",
            "operations": [
                {
                    "method": "GET",
                    "nickname": "getHistory",
                    "notes": "Users must have read access to this job to view the history.",
                    "parameters": [
                        {
                            "allowMultiple": false,
                            "description": "The id of the job.",
                            "name": "jobId",
                            "paramType": "path",
                            "required": true,
                            "type": "string"
                        }
                    ],
                    "summary": "Get the history of this job.",
                    "type": "JobHistoryResponse"
                }
            ],
            "path": "/jobs/v2/{jobId}/history"
        },
        {
            "description": "Get job permission details",
            "operations": [
                {
                    "method": "GET",
                    "nickname": "listPermissions",
                    "notes": "Users must have read access to this job to view the permissions.",
                    "parameters": [
                        {
                            "allowMultiple": false,
                            "description": "The id of the job.",
                            "name": "jobId",
                            "paramType": "path",
                            "required": true,
                            "type": "string"
                        }
                    ],
                    "summary": "Get the permission ACL for this job.",
                    "type": "JobPermissionResponse"
                },
                {
                    "method": "POST",
                    "nickname": "updatePermissions",
                    "notes": "To delete a single user, set their permission to NONE or an empty string",
                    "parameters": [
                        {
                            "allowMultiple": false,
                            "description": "The id of the job.",
                            "name": "jobId",
                            "paramType": "path",
                            "required": true,
                            "type": "string"
                        },
                        {
                            "allowMultiple": false,
                            "description": "The permission add or update. ",
                            "name": "body",
                            "paramType": "body",
                            "required": true,
                            "type": "JobPermissionRequest",
                            "defaultValue": "{\n\t\"username\":\"\",\n\t\"permission\": \"READ\"\n}"
                        }
                    ],
                    "summary": "Add or update a user's permission for an application.",
                    "type": "EmptyJobResponse"
                },
                {
                    "method": "DELETE",
                    "nickname": "deletePermissions",
                    "notes": "This will reset the permissions such that only the user who submitted the job will be able to view it. Job owners cannot remove their own permissions.",
                    "parameters": [
                        {
                            "allowMultiple": false,
                            "description": "The id of the job.",
                            "name": "jobId",
                            "paramType": "path",
                            "required": true,
                            "type": "string"
                        }
                    ],
                    "summary": "Deletes all permissions on an job.",
                    "type": "EmptyJobResponse"
                }
            ],
            "path": "/jobs/v2/{jobId}/pems"
        },
        {
            "description": "Get job permission details for a specific user.",
            "operations": [
                {
                    "method": "GET",
                    "nickname": "listPermissionsForUser",
                    "notes": "Users must have read access to this job to view the permissions.",
                    "parameters": [
                        {
                            "allowMultiple": false,
                            "description": "The id of the job.",
                            "name": "jobId",
                            "paramType": "path",
                            "required": true,
                            "type": "string"
                        },
                        {
                            "allowMultiple": false,
                            "description": "The username of the api user associated with the permission.",
                            "name": "username",
                            "paramType": "path",
                            "required": true,
                            "type": "string"
                        }
                    ],
                    "summary": "Get a specific user's permissions for a job.",
                    "type": "JobPermissionResponse"
                },
                {
                    "method": "POST",
                    "nickname": "updatePermissionsForUser",
                    "notes": "To delete a single user, use the DELETE operation or set their permission to NONE or an empty string",
                    "parameters": [
                        {
                            "allowMultiple": false,
                            "description": "The id of the job.",
                            "name": "jobId",
                            "paramType": "path",
                            "required": true,
                            "type": "string"
                        },
                        {
                            "allowMultiple": false,
                            "description": "The username of the api user associated with the permission",
                            "name": "username",
                            "paramType": "path",
                            "required": true,
                            "type": "string"
                        },
                        {
                            "allowMultiple": false,
                            "description": "The permission to update. ",
                            "name": "body",
                            "paramType": "body",
                            "required": true,
                            "type": "JobPermissionRequest",
                            "defaultValue": "{\n\t\"username\":\"\",\n\t\"permission\": \"READ_EXECUTE\",\n\t\"recursive\": false\n}"
                        }
                    ],
                    "summary": "Add or update a user's permission for an job.",
                    "type": "EmptyJobResponse"
                },
                {
                    "method": "DELETE",
                    "nickname": "deletePermissionsForUser",
                    "notes": "This will remove all permissions on an job for a user. Job owners cannot remote their own permissions.",
                    "parameters": [
                        {
                            "allowMultiple": false,
                            "description": "The id of the application. The application id is made up of the name and version separated by a dash.",
                            "name": "uniqueName",
                            "paramType": "path",
                            "required": true,
                            "type": "string"
                        },
                        {
                            "allowMultiple": false,
                            "description": "The username of the api user associated with the permission",
                            "name": "username",
                            "paramType": "path",
                            "required": true,
                            "type": "string"
                        }
                    ],
                    "summary": "Deletes all permissions for the given user on an job.",
                    "type": "EmptyApplicationResponse"
                }
            ],
            "path": "/jobs/v2/{jobId}/pems/{username}"
        },
        {
            "description": "Return just the status of the job",
            "operations": [
                {
                    "method": "GET",
                    "nickname": "getStatus",
                    "notes": "",
                    "parameters": [
                        {
                            "allowMultiple": false,
                            "description": "The id of the job.",
                            "name": "jobId",
                            "paramType": "path",
                            "required": true,
                            "type": "string"
                        }
                    ],
                    "summary": "Get the status of the job.",
                    "type": "JobStatusResponse"
                }
            ],
            "path": "/jobs/v2/{jobId}/status"
        },
        {
            "description": "Return a listing of the output folder from the job.",
            "operations": [
                {
                    "method": "GET",
                    "nickname": "listOutputs",
                    "notes": "The inputs will be obtained from the job submission folder.",
                    "parameters": [
                        {
                            "allowMultiple": false,
                            "description": "The id of the job.",
                            "name": "jobId",
                            "paramType": "path",
                            "required": true,
                            "type": "string"
                        },
                        {
                            "allowMultiple": false,
                            "description": "The path to an output file or folder relative to the job output directory. This resource will follow data around as it moves from the execution system to archival storage.",
                            "name": "filePath",
                            "paramType": "path",
                            "required": true,
                            "type": "string"
                        }
                    ],
                    "summary": "List the output folder for a job.",
                    "type": "MultipleRemoteFileResponse"
                }
            ],
            "path": "/jobs/v2/{jobId}/ouputs/listings/{filePath}"
        },
        {
            "description": "Download an output file.",
            "operations": [
                {
                    "method": "GET",
                    "nickname": "downloadOutput",
                    "notes": "This service will follow data around as it moves from the execution system to archival storage. You can use this endpoint to keep a permanent handle of the output of a job. Directory download is not currently supported.",
                    "produces": [
			        	"application/octet-stream"
			        ],
			        "parameters": [
                        {
                            "allowMultiple": false,
                            "description": "The id of the job.",
                            "name": "jobId",
                            "paramType": "path",
                            "required": true,
                            "type": "string"
                        },
                        {
                            "allowMultiple": false,
                            "description": "The path to an output file relative to the job output directory. ",
                            "name": "filePath",
                            "paramType": "path",
                            "required": false,
                            "type": "string"
                        }
                    ],
                    "summary": "Download an output file from a specific job.",
                    "type": "JobOutputFileDownload"
                }
            ],
            "path": "/jobs/v2/{jobId}/ouputs/media/{filePath}"
        },
        {
            "description": "Search for jobs matching given attribute/value combination(s).",
            "operations": [
                {
                    "method": "GET",
                    "nickname": "search",
                    "notes": "Search by combinations of attributes and values. The URL should be constructed with alternating attribute and value fields.",
                    "parameters": [
                        {
                            "allowMultiple": true,
                            "description": "The attribute to query by. This can be any job field.",
                            "name": "attribute",
                            "paramType": "path",
                            "required": true,
                            "type": "string"
                        },
                        {
                            "allowMultiple": true,
                            "description": "The value of the attribute to query for.",
                            "name": "value",
                            "paramType": "path",
                            "required": true,
                            "type": "string"
                        }
                    ],
                    "summary": "Find jobs matching the given attribute/value combination(s).",
                    "type": "MultipleJobResponse"
                }
            ],
            "path": "/jobs/v2/{attribute}/{value}"
        }
    ],
    "basePath": "https://api.araport.org",
    "models": {
        "ACL": {
            "id": "ACL",
            "name": "",
            "properties": {
                "read": {
                    "description": "can read",
                    "type": "boolean"
                },
                "write": {
                    "description": "can write",
                    "type": "boolean"
                }
            }
        },
        "EmptyJobResponse": {
            "id": "EmptyJobResponse",
            "name": "",
            "properties": {
                "message": {
                    "description": "success or failure",
                    "type": "string"
                },
                "result": {
                    "description": "empty result",
                    "type": "string"
                },
                "status": {
                    "description": "success or failure",
                    "type": "string"
                }
            }
        },
        "JobOutputFileDownload": {
            "id": "JobOutputFileDownload",
            "name": "",
            "properties": {}
        },
        "Job": {
            "id": "Job",
            "name": "",
            "properties": {
                "appId": {
                    "description": "The unique name of the application being run by this job. This must be a valid application that the calling user has permission to run.",
                    "type": "string"
                },
                "archive": {
                    "description": "Whether the output from this job should be archived. If true, all new files created by this application's execution will be archived to the archivePath in the user's default storage system.",
                    "type": "boolean"
                },
                "archivePath": {
                    "description": "The path of the archive folder for this job on the user's default storage sytem.",
                    "type": "string"
                },
                "archiveSystem": {
                    "description": "The unique id of the storage system on which this job's output will be staged.",
                    "type": "string"
                },
                "batchQueue": {
                	"description": "The queue to which this job should be submitted. This is optional and only applies when the execution system has a batch scheduler.",
                    "type": "string"
                },
                "endTime": {
                    "description": "The date the job stopped running due to termination, completion, or error in ISO 8601 format.",
                    "format": "date-time",
                    "type": "string"
                },
                "executionSystem": {
                    "description": "The system id of the execution system.",
                    "type": "string"
                },
                "id": {
                    "description": "The unique id of the job.",
                    "type": "string"
                },
                "inputs": {
                    "description": "The application specific input files needed for this job. These vary from application to application and should be entered as multiple individual parameters in the form. Inputs may be given as relative paths in the user's default storage system or as URI. If a URI is given, the data will be staged in by the IO service and made avaialble to the application at run time.",
                    "type": "JobInputs"
                },
                "localId": {
                    "description": "The process or local job id of the job on the remote execution system.",
                    "type": "string"
                },
                "memoryPerNode": {
                    "description": "The requested memory for this application to run given in GB.",
                    "type": "string"
                },
                "message": {
                    "description": "The error message incurred when the job failed.",
                    "type": "string"
                },
                "name": {
                    "description": "The name of the job.",
                    "type": "string"
                },
                "nodeCount": {
                    "description": "The number of processors this application should utilize while running. If the application is not of executionType PARALLEL, this should be 1.",
                    "format": "int32",
                    "type": "integer"
                },
                "notifications": {
                    "description": "An array of notifications you wish to receive.",
                    "items": {
                        "$ref": "Notification"
                    },
                    "type": "array"
                },
                "outputPath": {
                    "description": "Relative path of the job's output data.",
                    "type": "String"
                },
                "owner": {
                    "description": "The job owner.",
                    "type": "string"
                },
                "parameters": {
                    "description": "The application specific parameters needed for this job. These vary from application to application and should be entered as multiple individual parameters in the form. The actual dataType will be determined by the application description.",
                    "type": "JobParameters"
                },
                "processorsPerNode": {
                    "description": "The number of processors this application should utilize while running. If the application is not of executionType PARALLEL, this should be 1.",
                    "format": "int32",
                    "type": "integer"
                },
                "maxRunTime": {
                    "description": "The requested compute time needed for this application to complete given in HH:mm:ss format.",
                    "type": "string"
                },
                "retries": {
                    "description": "The number of retires it took to submit this job.",
                    "format": "int32",
                    "type": "integer"
                },
                "startTime": {
                    "description": "The date the job started in ISO 8601 format.",
                    "format": "date-time",
                    "type": "string"
                },
                "status": {
                    "description": "The status of the job. Possible values are: PENDING, STAGING_INPUTS, CLEANING_UP, ARCHIVING, STAGING_JOB, FINISHED, KILLED, FAILED, STOPPED, RUNNING, PAUSED, QUEUED, SUBMITTING, STAGED, PROCESSING_INPUTS, ARCHIVING_FINISHED, ARCHIVING_FAILED",
                    "type": "string"
                },
                "submitTime": {
                    "description": "The date the job was submitted in ISO 8601 format.",
                    "format": "date-time",
                    "type": "string"
                },
                "workPath": {
                    "description": "The directory on the remote execution system from which the job is running.",
                    "type": "string"
                }
            }
        },
        "JobRequest": {
            "id": "JobRequest",
            "name": "",
            "properties": {
                "appId": {
                    "description": "The unique name of the application being run by this job. This must be a valid application that the calling user has permission to run.",
                    "type": "string",
                    "required": true
                },
                "archive": {
                    "description": "Whether the output from this job should be archived. If true, all new files created by this application's execution will be archived to the archivePath in the user's default storage system.",
                    "type": "boolean",
                    "required": true
                },
                "archivePath": {
                    "description": "The path of the archive folder for this job on the user's default storage sytem.",
                    "type": "string"
                },
                "archiveSystem": {
                    "description": "The unique id of the storage system on which this job's output will be staged.",
                    "type": "string"
                },
                "batchQueue": {
                  "description": "The queue to which this job should be submitted. This is optional and only applies when the execution system has a batch scheduler.",
                    "type": "string"
                },
                "inputs": {
                    "description": "The application specific input files needed for this job. These vary from application to application and should be entered as multiple individual parameters in the form. Inputs may be given as relative paths in the user's default storage system or as URI. If a URI is given, the data will be staged in by the IO service and made avaialble to the application at run time.",
                    "type": "JobInputs",
                    "required": true
                },
                "memoryPerNode": {
                    "description": "The requested memory for this application to run given in GB.",
                    "type": "string"
                },
                "name": {
                    "description": "The name of the job.",
                    "type": "string",
                    "required": true
                },
                "nodeCount": {
                    "description": "The number of processors this application should utilize while running. If the application is not of executionType PARALLEL, this should be 1.",
                    "format": "int32",
                    "type": "integer"
                },
                "notifications": {
                    "description": "An array of notifications you wish to receive.",
                    "items": {
                        "$ref": "Notification"
                    },
                    "type": "array"
                },
                "parameters": {
                    "description": "The application specific parameters needed for this job. These vary from application to application and should be entered as multiple individual parameters in the form. The actual dataType will be determined by the application description.",
                    "type": "JobParameters",
                    "required": true
                },
                "processorsPerNode": {
                    "description": "The number of processors this application should utilize while running. If the application is not of executionType PARALLEL, this should be 1.",
                    "format": "int32",
                    "type": "integer",
                    "minimum": 1
                },
                "maxRunTime": {
                    "description": "The requested compute time needed for this application to complete given in HH:mm:ss format.",
                    "type": "string"
                }
            }
        },
        "JobHistory": {
            "id": "JobHistory",
            "name": "",
            "properties": {
                "created": {
                    "description": "The date of the event.",
                    "format": "date-time",
                    "type": "string"
                },
                "description": {
                    "description": "A brief description of the event details.",
                    "type": "String"
                },
                "status": {
                    "description": "The status of the job after this event.",
                    "type": "String"
                }
            }
        },
        "JobHistoryResponse": {
            "id": "JobHistoryResponse",
            "name": "",
            "properties": {
                "message": {
                    "description": "success or failure",
                    "type": "string"
                },
                "result": {
                    "description": "response body",
                    "items": {
                        "$ref": "JobHistory"
                    },
                    "type": "array"
                },
                "status": {
                    "description": "success or failure",
                    "type": "string"
                }
            }
        },
        "JobPermissionResponse": {
            "id": "JobPermissionResponse",
            "name": "",
            "properties": {
                "message": {
                    "description": "success or failure",
                    "type": "string"
                },
                "result": {
                    "type": "PermissionListing"
                },
                "status": {
                    "description": "success or failure",
                    "type": "string"
                }
            }
        },
        "JobSubmission": {
            "id": "JobSubmission",
            "name": "",
            "properties": {
                "archive": {
                    "description": "Whether the output from this job should be archived. If true, all new files created by this application's execution will be archived to the archivePath in the user's default storage system.",
                    "type": "boolean"
                },
                "archivePath": {
                    "description": "The path of the archive folder for this job on the archiveSystem. Defaults to the user's default storage system.",
                    "type": "string"
                },
                "archiveSystem": {
                    "description": "The system on which the job data will be archived",
                    "type": "string"
                },
                "inputs": {
                    "description": "The application specific input files needed for this job. These vary from application to application and should be entered as multiple individual parameters in the form. Inputs may be given as relative paths in the user's default storage system or as URI. If a URI is given, the data will be staged in by the IO service and made avaialble to the application at run time.",
                    "type": "JobInputs"
                },
                "name": {
                    "description": "The name of the job.",
                    "type": "string"
                },
                "maxMemory": {
                    "description": "The maximum amount of memory needed for this application to run given in GB.",
                    "type": "string"
                },
                "nodeCount": {
                    "description": "The number of nodes this application should utilize while running. If the application is not of executionType PARALLEL, this should be 1.",
                    "format": "int32",
                    "type": "integer",
                    "minimum": 1
                },
                "notifications": {
                    "description": "An array of notifications you wish to receive.",
                    "items": {
                        "$ref": "Notification"
                    },
                    "type": "array"
                },
                "parameters": {
                    "description": "The application specific parameters needed for this job. These vary from application to application and should be entered as multiple individual parameters in the form. The actual dataType will be determined by the application description.",
                    "type": "JobParameters"
                },
                "processorsPerNode": {
                    "description": "The number of processors this application should utilize while running.",
                    "format": "int32",
                    "type": "integer",
                    "minimum": 1
                },
                "batchQueue": {
                    "description": "The queue to which this job should be submitted. This is optional and only applies when the execution system has a batch scheduler.",
                    "type": "string"
                },
                "maxRunTime": {
                    "description": "The estimated compute time needed for this application to complete given in hh:mm:ss format.",
                    "type": "string"
                },
                "appId": {
                    "description": "The unique name of the application being run by this job. This must be a valid application that the calling user has permission to run.",
                    "type": "string"
                }
            }
        },
        "JobParameters": {
       		"id": "JobParameters",
            "name": "",
            "properties": {
            	"parameter1": {
                    "description": "One or more parameters identified in the description of the app you're running. ",
                    "type": "string",
                    "required": false
                }
            }
        },
        "JobInputs": {
       		"id": "JobInputs",
            "name": "",
            "properties": {
            	"parameter1": {
                    "description": "One or more inputs identified in the description of the app you're running. ",
                    "type": "string",
                    "required": false
                }
            }
        },
        "MultipleJobResponse": {
            "id": "MultipleJobResponse",
            "name": "",
            "properties": {
                "message": {
                    "description": "success or failure",
                    "type": "string"
                },
                "result": {
                    "description": "response body",
                    "items": {
                        "$ref": "JobSummary"
                    },
                    "type": "array"
                },
                "status": {
                    "description": "success or failure",
                    "type": "string"
                }
            }
        },
        "JobSummary": {
        	"id": "JobSummary",
            "name": "",
            "properties": {
            	"appId": {
                    "description": "The unique name of the application being run by this job. This must be a valid application that the calling user has permission to run.",
                    "type": "string"
                },
                "endTime": {
                    "description": "The date the job ended in ISO 8601 format.",
                    "format": "date-time",
                    "type": "string"
                },
                "executionSystem": {
                    "description": "The system id of the execution system.",
                    "type": "string"
                },
                "id": {
                    "description": "The unique id of the job.",
                    "type": "string"
                },
                "name": {
                    "description": "The name of the job.",
                    "type": "string"
                },
                "owner": {
                    "description": "The job owner.",
                    "type": "string"
                },
                "startTime": {
                    "description": "The date the job started in ISO 8601 format.",
                    "format": "date-time",
                    "type": "string"
                },
                "status": {
                    "description": "The status of the job. Possible values are: PENDING, STAGING_INPUTS, CLEANING_UP, ARCHIVING, STAGING_JOB, FINISHED, KILLED, FAILED, STOPPED, RUNNING, PAUSED, QUEUED, SUBMITTING, STAGED, PROCESSING_INPUTS, ARCHIVING_FINISHED, ARCHIVING_FAILED",
                    "type": "string"
                }
			}
		},
		"JobStatusResponse": {
            "id": "JobStatusResponse",
            "name": "",
            "properties": {
                "message": {
                    "description": "success or failure",
                    "type": "string"
                },
                "result": {
                    "description": "response body",
                    "type": "JobStatus"
                },
                "status": {
                    "description": "success or failure",
                    "type": "string"
                }
            }
        },
        "JobStatus": {
        	"id": "JobStatus",
            "name": "",
            "properties": {
            	"id": {
                    "description": "The unique id of the job.",
                    "type": "string"
                },
                "status": {
                    "description": "The status of the job. Possible values are: PENDING, STAGING_INPUTS, CLEANING_UP, ARCHIVING, STAGING_JOB, FINISHED, KILLED, FAILED, STOPPED, RUNNING, PAUSED, QUEUED, SUBMITTING, STAGED, PROCESSING_INPUTS, ARCHIVING_FINISHED, ARCHIVING_FAILED",
                    "type": "string"
                }
			}
		},
		"MultipleRemoteFileResponse": {
            "id": "MultipleRemoteFileResponse",
            "name": "",
            "properties": {
                "message": {
                    "description": "success or failure",
                    "type": "string"
                },
                "result": {
                    "description": "response body",
                    "items": {
                        "$ref": "RemoteFile"
                    },
                    "type": "array"
                },
                "status": {
                    "description": "success or failure",
                    "type": "string"
                }
            }
        },
        "Notification": {
            "id": "Notification",
            "name": "",
            "properties": {
                "event": {
                    "description": "The event you wish to recieve a notification about. Specify * for all events.",
                    "type": "string"
                },
                "persistent": {
                    "description": "Whether this event should remain active after it triggers the first time.",
                    "type": "boolean"
                },
                "url": {
                    "description": "The URI to notify when the import is complete. This can be an email address or URL. If a URL is given, a POST will be made to this address. URL templating is supported. Valid template values are: ${JOB_STATUS}, ${JOB_URL}, ${JOB_ID}, ${JOB_SYSTEM}, ${JOB_NAME}, ${JOB_START_TIME}, ${JOB_END_TIME}, ${JOB_SUBMIT_TIME}, ${JOB_ARCHIVE_PATH}, ${JOB_ARCHIVE_URL}, ${JOB_ERROR}",
                    "format": "int32",
                    "type": "integer"
                }
            }
        },
        "Permission": {
            "id": "Permission",
            "name": "",
            "properties": {
                "permission": {
                    "type": "ACL"
                },
                "username": {
                    "description": "Username associate with this permission",
                    "type": "string"
                }
            }
        },
        "PermissionListing": {
            "id": "PermissionListing",
            "name": "",
            "properties": {
                "name": {
                    "description": "Unique name of the application to which this permissions apply.",
                    "type": "string"
                },
                "owner": {
                    "description": "Owner of the application.",
                    "type": "string"
                },
                "permissions": {
                    "description": "Permissions granted on this application.",
                    "items": {
                        "$ref": "Permission"
                    },
                    "type": "array"
                }
            }
        },
        "RemoteFile": {
            "id": "RemoteFile",
            "name": "",
            "properties": {
                "format": {
                    "description": "The file type of the file.",
                    "type": "string"
                },
                "lastModified": {
                    "description": "The date this file was last modified in ISO 8601 format.",
                    "format": "date-time",
                    "type": "string"
                },
                "length": {
                    "description": "The length of the file/folder.",
                    "format": "int32",
                    "type": "integer"
                },
                "mimeType": {
                    "description": "The mime type of the file/folder. If unknown, it defaults to application/binary.",
                    "type": "string"
                },
                "name": {
                    "description": "The name of the file/folder.",
                    "type": "string"
                },
                "path": {
                    "description": "The absolute path to the file/folder.",
                    "type": "string"
                },
                "permissions": {
                    "description": "The system permission of the invoking user on the file/folder.",
                    "type": "string"
                },
                "system": {
                    "description": "The systemId of the system where this file lives.",
                    "type": "string"
                },
                "type": {
                    "description": "Whether it is a file or folder.",
                    "type": "string"
                }
            }
        },
        "SingleJobResponse": {
            "id": "SingleJobResponse",
            "name": "",
            "properties": {
                "message": {
                    "description": "success or failure",
                    "type": "string"
                },
                "result": {
                    "type": "Job"
                },
                "status": {
                    "description": "success or failure",
                    "type": "string"
                }
            }
        },
        "JobPermissionRequest": {
          "id": "JobPermissionRequest",
          "name": "",
          "properties": {
              "username": {
                  "description": "The username of the api user whose permission is to be set.",
                  "type": "string",
                  "required": true
              },
              "permission": {
                  "description": "The permission to set",
                  "type": "string",
                  "required": true,
                  "enum": [
                    "READ",
                    "WRITE",
                    "EXECUTE",
                    "READ_WRITE",
                    "READ_EXECUTE",
                    "WRITE_EXECUTE",
                    "ALL",
                    "NONE"
                  ]
              }
          }
        },
        "JobOperationRequest": {
          "id": "JobOperationRequest",
          "name": "",
          "properties": {
              "action": {
                  "description": "Action to perform on the job.",
                  "type": "string",
                  "required": true,
                  "enum": [
                      "resubmit",
                      "stop"
                  ]
              }
          }
        }
    },
    "resourcePath": "/jobs/v2",
    "swaggerVersion": "1.2"
}
